@model WishlistModel
@inject SeoSettings seoSettings
@inject IWorkContext workContext
@inject IPageHeadBuilder pagebuilder
@{
    var supportRtl = workContext.WorkingLanguage.Rtl;
    if (supportRtl)
    {
        <link rel="stylesheet" type="text/css" asp-src="/theme/css/cart/cart.rtl.css">
    }
    else
    {
        <link rel="stylesheet" type="text/css" asp-src="/theme/css/cart/cart.css">
    }
}
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Loc["Title.Wishlist"]);
}
<div class="page wishlist-page mt-3">
    <h2 class="generalTitle text-center mt-3">
        @if (Model.IsEditable)
        {
            @Loc["Wishlist"]
        }
        else
        {
            @String.Format(Loc["Wishlist.WishlistOf"], Model.CustomerFullname)
        }
    </h2>
    @if (Model.Items.Any())
    {
        <div class="wishlist-content mt-3">
            @if (Model.Warnings.Any())
            {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
            }
            <form asp-controller="Wishlist" asp-action="Index" method="post">
                @if (!Model.IsEditable && Model.Items.Any())
                {
                    <input type="hidden" asp-for="@Model.CustomerGuid" />
                }
                <div class="shopping-cart-container">
                    <div class="static-cart">
                        <div id="wishlist-cart"></div>
                        <script>
                            var WishlistCart = Vue.extend({
                                template: '<b-table :fields="fields" :items="items" id="cart-table" class="shopping-cart"> <template v-slot:cell(picture)="data"> <div v-html="data.value.picture"></div></template> <template v-slot:cell(product)="data"> <div v-html="data.value.name"></div><div v-html="data.value.sku"></div><div v-html="data.value.attributes"></div><div v-html="data.value.recurring"></div><div v-html="data.value.reservation"></div><div v-html="data.value.edit"></div><div v-html="data.value.warnings"></div></template> <template v-slot:cell(unit)="data"> <div v-html="data.value.unitprice"></div></template> <template v-slot:cell(qty)="data"> <div v-html="data.value.selector"></div></template> <template v-slot:cell(total)="data"> <div v-html="data.value.subtotal"></div></template> <template v-slot:cell(remove)="data"> <div v-html="data.value.href"></div></template> <template v-slot:cell(addtocart)="data"> <div v-html="data.value.href"></div></template> </b-table>',
                                data: function () {
                                    return {
                                         fields: [
                                            @if (Model.ShowProductImages){
                                                <text>
                                                    { key: 'picture', label: '@Loc["ShoppingCart.Image"]',class: 'text-center' },
                                                </text>
                                            }
                                            { key: 'product', label: '@Loc["ShoppingCart.Product(s)"]', class: 'text-center' },
                                            { key: 'unit', label: '@Loc["ShoppingCart.UnitPrice"]', sortable: true, class: 'text-center' },
                                            { key: 'qty', label: '@Loc["ShoppingCart.Quantity"]', sortable: true, class: 'text-center'  },
                                            { key: 'total', label: '@Loc["ShoppingCart.ItemTotal"]', sortable: true, class: 'text-center'  },
                                            @if (Model.IsEditable || Model.DisplayAddToCart){
                                                <text>
                                                    { key: 'remove', label: '@Loc["Remove"]' },
                                                </text>
                                                @if (Model.DisplayAddToCart)
                                                {
                                                    <text>
                                                        { key: 'addtocart', label: '@Loc["addToCart"]' },
                                                    </text>
                                                }
                                            }
                                        ],
                                        items: [
                                            @foreach (var item in Model.Items)
                                            {
                                                <text>
                                            {
                                                picture: {
                                                     picture: '<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>'
                                                },
                                                product: {
                                                    name: '<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>',
                                                    @if (Model.ShowSku && !String.IsNullOrEmpty(item.Sku))
                                                    {
                                                        <text>
                                                    sku: '<span class="sku-number">@item.Sku</span>',
                                                        </text>
                                                    }
                                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                                    {
                                                        <text>
                                                    attributes: '<div class="attributes small">@Html.Raw(item.AttributeInfo)</div>',
                                                        </text>
                                                    }
                                                    @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                                    {
                                                        <text>
                                                    recuring: '<div class="recurring-info">@Html.Raw(item.RecurringInfo)</div>',
                                                        </text>
                                                    }
                                                    @if (Model.IsEditable && item.AllowItemEditing)
                                                    {
                                                        <text>
                                                    edit: '@{var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, Context.Request.Scheme);editCartItemUrl = Grand.Infrastructure.Extensions.CommonExtensions.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id);<div class="edit-item mb-1 mt-1"><a class="btn btn-sm btn-secondary" href="@editCartItemUrl">@Loc["Common.Edit"]</a></div>}',
                                                        </text>
                                                    }
                                                },
                                                qty: {
                                                    @if (Model.IsEditable)
                                                    {
                                                        <text>
                                                        selector: '@if (item.AllowedQuantities.Count > 0){<select id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" class="custom-select form-control qty-dropdown">@foreach (var qty in item.AllowedQuantities){<option id="itemqty@(item.Id)" selected="@qty.Selected" value="@qty.Value">@qty.Value</option>}</select>}else{<input id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" type="number" value="@(item.Quantity)" min="1" class="qty-input form-control text-center" />}',
                                                        </text>
                                                    } else {
                                                        <text>
                                                        selector: '<input id="itemquantity@(item.Id)" name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input-ro form-control text-center" readonly />'
                                                        </text>
                                                    }
                                                },
                                                unit: {
                                                    unitprice: '<span class="product-unit-price price">@item.UnitPrice</span>'
                                                },
                                                total: {
                                                    @if (!String.IsNullOrEmpty(item.Discount)) {
                                                        <text>
                                                            subtotal: '<div class="d-flex flex-column"><p class="mb-0 prod-total">@item.SubTotal</p><div class="discount text-success text-center"><span>@Loc["ShoppingCart.ItemYouSave"]: </span><span>@item.Discount</span></div>',
                                                        </text>
                                                    } else {
                                                        <text>
                                                            subtotal: '<p class="mb-0 prod-total">@item.SubTotal</p>'
                                                        </text>
                                                    }
                                                },
                                                @if (Model.IsEditable || Model.DisplayAddToCart)
                                                {
                                                    @if (Model.IsEditable) {
                                                        <text>
                                                        remove: {
                                                            href: '<label class="custom-control custom-switch mb-0 pl-0"><input type="checkbox" id="@Loc["Remove"]-@(item.Id)" name="removefromcart" class="custom-control-input" value="@(item.Id)"><span class="custom-control-label ml-5"></span></label>'
                                                        },
                                                        </text>
                                                    }
                                                    @if (Model.DisplayAddToCart)
                                                    {
                                                        <text>
                                                        addtocart: {
                                                            href: '<label class="custom-control custom-switch mb-0 pl-0"><input type="checkbox" id="account.shoppingcart-@(item.Id)" name="addtocart" class="custom-control-input" value="@(item.Id)"><span class="custom-control-label ml-5"></span></label>'
                                                        },
                                                        </text>
                                                    }
                                                }
                                            },
                                                </text>
                                            }
                                        ]
                                    }
                                }
                            })
                            new WishlistCart().$mount('#wishlist-cart')
                        </script>
                    </div>
                </div>
                <div class="btn-group my-3">
                    @if (Model.IsEditable)
                    {
                        <button type="submit" asp-action="UpdateWishlist" name="update" variant="info" class="btn btn-info update-wishlist-button d-flex align-items-center">
                            <b-icon font-scale="2" icon="arrow-clockwise" class="pr-2"></b-icon>
                            <span>@Loc["Wishlist.UpdateCart"]</span>
                        </button>
                    }
                    @if (Model.DisplayAddToCart)
                    {                        
                        <button type="submit" asp-action="AddItemsToCartFromWishlist"                                
                                name="addtocartbutton" variant="info" class="btn btn-info wishlist-add-to-cart-button d-flex align-items-center ml-1">
                            <b-icon font-scale="2" icon="cart" class="pr-2"></b-icon>
                            <span>@Loc["ShoppingCart.AddToCart"]</span>
                        </button>
                    }
                    @if (Model.IsEditable && Model.EmailWishlistEnabled)
                    {
                        <button type="button" class="btn btn-secondary email-a-friend-wishlist-button d-flex align-items-center ml-1" onclick="location='@Url.RouteUrl("EmailWishlist")'">
                            <b-icon font-scale="2" icon="envelope" class="pr-2"></b-icon>
                            <span class="d-sm-block d-none">@Loc["Wishlist.EmailAFriend"]</span>
                        </button>
                    }
                </div>
            </form>
        </div>
    }
    else
    {
        <div class="no-data alert alert-info text-center">
            @Loc["Wishlist.CartIsEmpty"]
        </div>
    }
    @if (Model.IsEditable && Model.Items.Any())
    {
        <div class="row">
            <div class="col-12 share-info generalMarginSupporter text-center text-md-left">
                <span class="share-label">@Loc["Wishlist.YourWishlistURL"]:</span>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="small ml-2">@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
            </div>
        </div>
    }
</div>