@model CustomerMerchandiseReturnsModel
@using Grand.Web.Models.Customer
@using Grand.Web.Models.Orders
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_TwoColumns";

    //title
    pagebuilder.AddTitleParts(Loc["Title.Account"]);
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = AccountNavigationEnum.MerchandiseReturns })
}
<div class="page account-page return-request-list-page pl-lg-3 pt-3 pt-lg-0">
    <h1 class="h2 generalTitle">@Loc["Account.CustomerMerchandiseReturns"]</h1>
    @if (Model.Items.Any())
    {
        <div class="row">
            @foreach (var item in Model.Items)
            {
                <div class="col col-lg-6 col-md-6 col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">
                                @string.Format(Loc["Account.CustomerMerchandiseReturns.Title"], item.ReturnNumber, item.MerchandiseReturnStatus)
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="d-inline-flex align-items-center flex-wrap mb-3">
                                <b-icon icon="calendar2-check" variant="info" class="mx-2"></b-icon>
                                <small class="date text-muted">
                                    <label class="mb-0">@Loc["Account.CustomerMerchandiseReturns.Date"]</label>
                                    <span>@item.CreatedOn.ToString()</span>
                                </small>
                            </div>
                            <div class="alert alert-info mb-0">
                                @string.Format(Loc["Account.CustomerMerchandiseReturns.Totals"], item.ProductsCount, item.ReturnTotal)
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-sm btn-info" onclick="location = ('@Url.RouteUrl("MerchandiseReturnDetails", new { merchandiseReturnId = item.Id })')">
                                @Loc["Account.CustomerMerchandiseReturns.Details"]
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-data alert alert-info my-3">
            @Loc["Account.CustomerMerchandiseReturns.NoMerchandiseReturns"]
        </div>
    }
</div>
