@model OrderModel.AddOrderProductModel
@inject AdminAreaSettings adminAreaSettings
@{
    //page title
    ViewBag.Title = string.Format(Loc["Admin.Orders.Products.AddNew.Title1"], Model.OrderNumber);
}

<div class="row">
    <div class="col-md-12">
        <div class="x_panel light form-fit">
            <div class="x_title">
                <div class="caption">
                    <i class="fa fa-cube"></i>
                    @string.Format(Loc["Admin.Orders.Products.AddNew.Title1"], Model.OrderNumber)
                    <small>
                        <i class="fa fa-arrow-circle-left"></i>
                        @Html.ActionLink(Loc["Admin.Orders.Products.AddNew.BackToOrder"], "Edit", new { id = Model.OrderId })
                    </small>
                </div>
            </div>
            <div class="x_content form">
                <vc:admin-widget widget-zone="order_add_products_top" additional-data="Model"/>
                <div class="form-horizontal">
                    <div class="form-body">
                        <div class="form-group popup">
                            <admin-label class="col-sm-2 control-label" asp-for="SearchProductName"/>
                            <div class="col-8 col-md-4 col-sm-4">
                                <admin-input asp-for="SearchProductName"/>
                            </div>
                            <div class="col-8 col-md-6 col-sm-4 mt-mobile-10">
                                <div class="btn-group btn-group-devided">
                                    <button class="btn btn-success filter-submit" id="search-products">
                                        <i class="fa fa-search"></i> @Loc["Admin.Common.Search"]
                                    </button>
                                    <button type="button" class="btn btn-default filter-extend-button">
                                        <i class="fa fa-filter"></i>
                                    </button>
                                    <button class="btn btn-success" type="submit" name="save">
                                        <i class="fa fa-check"></i> @Loc["Admin.Common.Save"]
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="form-group extend-collapse">
                            <admin-label asp-for="SearchCategoryId"/>
                            <div class="col-md-9 col-sm-9">
                                <admin-input asp-for="SearchCategoryId"/>
                            </div>
                        </div>
                        <div class="form-group extend-collapse">
                            <admin-label asp-for="SearchBrandId"/>
                            <div class="col-md-9 col-sm-9">
                                <admin-input asp-for="SearchBrandId"/>
                            </div>
                        </div>
                        <div class="form-group extend-collapse">
                            <admin-label asp-for="SearchCollectionId"/>
                            <div class="col-md-9 col-sm-9">
                                <admin-input asp-for="SearchCollectionId"/>
                            </div>
                        </div>
                        <div class="form-group extend-collapse">
                            <admin-label asp-for="SearchProductTypeId"/>
                            <div class="col-md-9 col-sm-9">
                                <admin-select asp-for="SearchProductTypeId" asp-items="Model.AvailableProductTypes"/>
                            </div>
                        </div>
                    </div>
                </div>
                <vc:admin-widget widget-zone="order_add_products_bottom" additional-data="Model"/>
            </div>
            <div class="x_content">
                <strong>@Loc["Admin.Orders.Products.AddNew.Note1"]</strong>
                <div id="products-grid"></div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        $('.extend-collapse').hide();
        $('.filter-extend-button').click(function () {
            $('.extend-collapse').toggle("slow");
            $('.filter-text-close').toggle();
        });

        $("#products-grid").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("AddProductToOrder", "Order", new { area = Constants.AreaAdmin }))",
                        type: "POST",
                        dataType: "json",
                        data: additionalData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors"
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(adminAreaSettings.DefaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(adminAreaSettings.GridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            //selectable
            selectable: true,
            change: onChange,
            columns: [{
                field: "Name",
                title: "@Loc["Admin.Orders.Products.AddNew.Name"]",
                width: 400
            },{
                field: "Sku",
                title: "@Loc["Admin.Orders.Products.AddNew.SKU"]",
                width: 100
            }]
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#search-products').click(function () {
            var grid = $('#products-grid').data('kendoGrid');
            grid.dataSource.page(1); //new search. Set page size to 1
            //grid.dataSource.read(); we already loaded the grid above using "page" function
            return false;
        });
    });

    $("#@Html.IdFor(model => model.SearchProductName)").keydown(function (event) {
        if (event.keyCode == 13) {
            $("#search-products").click();
            return false;
        }
    });

    function additionalData() {
        var data = {
            SearchProductName: $('#@Html.IdFor(model => model.SearchProductName)').val(),
            SearchCategoryId: $('#SearchCategoryId').val(),
            SearchBrandId: $('#SearchBrandId').val(),
            SearchCollectionId: $('#SearchCollectionId').val(),
            SearchProductTypeId: $('#SearchProductTypeId').val()
        };
        addAntiForgeryToken(data);
        return data;
    }

    function onChange(e) {
        var grid = $('#products-grid').data('kendoGrid');
        var selectedItem = grid.dataItem(grid.select());
        var productId = selectedItem.Id;
        //load "product details page" block
        var productDetailsActionUrl = '@Html.Raw(Url.Action("AddProductToOrderDetails", "Order", new { orderId = Model.OrderId, productId = "productidplaceholder", area = Constants.AreaAdmin }))';
        productDetailsActionUrl = productDetailsActionUrl.replace("productidplaceholder", productId);
        setLocation(productDetailsActionUrl);
    }
</script>
<div id="productdetails">
</div>
<input asp-for="OrderId" type="hidden"/>